@charset "UTF-8";
@font-face {
  font-family: Roboto;
  font-display: block;
  src: url(../fonts/Roboto-Black.woff2) format("woff2"),url(../fonts/Roboto-Black.woff) format("woff");
  font-weight: 900;
  font-style: normal
}
@font-face {
  font-family: Roboto;
  font-display: block;
  src: url(../fonts/Roboto-Bold.woff2) format("woff2"),url(../fonts/Roboto-Bold.woff) format("woff");
  font-weight: 700;
  font-style: normal
}
@font-face {
  font-family: Roboto;
  font-display: block;
  src: url(../fonts/Roboto-Regular.woff2) format("woff2"),url(../fonts/Roboto-Regular.woff) format("woff");
  font-weight: 400;
  font-style: normal
}
@font-face {
  font-family: kill-team-icons;
  src: url(../fonts/kill-team-icons.eot?62976235);
  src: url(../fonts/kill-team-icons.eot?62976235#iefix) format("embedded-opentype"),url(../fonts/kill-team-icons.woff2?62976235) format("woff2"),url(../fonts/kill-team-icons.woff?62976235) format("woff"),url(../fonts/kill-team-icons.ttf?62976235) format("truetype"),url(../svg/newIcons/kill-team-icons.svg) format("svg");
  font-weight: 400;
  font-style: normal
}
[class*=" icon-"]:before,
[class^=icon-]:before {
  font-family: kill-team-icons;
  font-style: normal;
  font-weight: 400;
  speak: never;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  font-variant: normal;
  text-transform: none;
  line-height: 1em;
  margin-left: .2em;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale
}
.icon-ellipse:before {
  content: "\e800";
  color: #fff;
  -webkit-text-stroke-color: #000;
  -webkit-text-stroke-width: 2px
}
.icon-navigation:before {
  content: "\e801"
}
.icon-pentagon:before {
  content: "\e802";
  color: #961313;
  -webkit-text-stroke-color: #000;
  -webkit-text-stroke-width: 2px
}
.icon-rectangle:before {
  content: "\e803";
  color: #2b469f;
  -webkit-text-stroke-color: #000;
  -webkit-text-stroke-width: 2px
}
.icon-target:before {
  content: "\e804"
}
.icon-triangle:before {
  content: "\e805";
  color: #000;
  -webkit-text-stroke-color: #000;
  -webkit-text-stroke-width: 2px
}
.icon-shield:before {
  content: "\e806"
}
.icon-swords:before {
  content: "\e807"
}
* {
  padding: 0;
  margin: 0;
  border: 0
}
*,
::after,
::before {
  -webkit-box-sizing: border-box;
  box-sizing: border-box
}
blockquote,
body,
dd,
dl,
figure,
h1,
h2,
h3,
h4,
p {
  margin: 0
}
ol[role=list],
ul[role=list] {
  list-style: none
}
html:focus-within {
  scroll-behavior: smooth
}
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  font-family: Roboto,sans-serif
}
a:not([class]) {
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto
}
img,
picture {
  max-width: 100%;
  display: block
}
button,
input,
select,
textarea {
  font: inherit
}
body {
  background: #303036
}
html {
  margin-right: calc(-1 * (100vw - 100%));
  overflow-x: hidden
}
html {
  scroll-behavior: smooth
}
.title {
  padding-bottom: .625rem;
  text-align: center;
  text-transform: uppercase;
  font-weight: 900;
  color: #e98349
}
.title__h1,
h1 {
  font-size: 3rem
}
.title__h2,
h2 {
  font-size: 2.25rem
}
.title__h3,
h3 {
  font-size: 1.5rem
}
.title__h4,
h4 {
  font-size: 1.25rem
}
[class^=icon-] {
  text-indent: 0
}
.icon-shield .icon-navigation,
.icon-swords,
.icon-target {
  color: #000
}
.wrapper {
  min-height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: hidden
}
@supports (overflow:clip) {
  .wrapper {
    overflow: clip
  }
}
.wrapper > main {
  -webkit-box-flex: 1;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto
}
.wrapper > * {
  min-width: 0
}
body,
html {
  height: 100%
}
[class*=__container] {
  max-width: 75rem;
  margin: 0 auto;
  padding: 0 .9375rem
}
.info__container {
  padding-bottom: 1.875rem;
  background-color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center
}
.info__logo {
  padding-bottom: 3.75rem
}
.info__title {
  padding-bottom: 3.75rem;
  color: #303036;
  font-size: 32px;
  font-style: normal;
  font-weight: 900;
  line-height: normal;
  text-transform: uppercase
}
.info-readmore {
  width: 50rem;
  text-align: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 1.25rem
}
.info-readmore__text {
  color: #2e2d2d;
  font-size: 24px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  letter-spacing: 2.4px
}
.info-readmore__btn {
  color: #737171;
  text-align: center;
  font-family: Roboto;
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  letter-spacing: 1.4px;
  background: 0 0;
  cursor: pointer
}
.rules__container {
  padding-top: 1.875rem;
  background-color: #fff;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 5fr 7fr;
  grid-template-columns: 5fr 7fr;
  gap: 15px
}
.rules__core {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
  text-decoration: none;
  color: #303036;
  background-color: #c19999;
  height: 21.875rem;
  border-radius: 15px;
  -webkit-box-shadow: 0 5px 8px -2px rgba(56,53,56,.5);
  box-shadow: 0 5px 8px -2px rgba(56,53,56,.5);
  overflow: hidden
}
.no-webp .rules__core--1 {
  background-image: url(../image/corebook.jpg)
}
.rules__core--1 {
  -ms-grid-column: 1;
  grid-column: 1;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center
}
.no-webp .rules__core--2 {
  background-image: url(../image/otherbooks.jpg)
}
.rules__core--2 {
  -ms-grid-column: 2;
  grid-column: 2;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center
}
.rules__box {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
  container-type: inline-size;
  background: -webkit-gradient(linear,left bottom,left top,color-stop(50%,rgba(255,255,255,.5)),to(rgba(255,255,255,0)));
  background: linear-gradient(0deg,rgba(255,255,255,.5) 50%,rgba(255,255,255,0) 100%)
}
.rules__title {
  color: #303036;
  font-size: 32px;
  font-weight: 900;
  text-transform: uppercase
}
.rules__description {
  height: 200px;
  width: 80cqi
}
.rules__subtitle {
  color: #e98349;
  font-size: 12px;
  font-weight: 900
}
.title {
  padding-top: 3.75rem
}
.datacards__container,
.tools__container {
  background-color: #e4e3e3
}
.paragraph {
  padding-bottom: 1.25rem
}
.list {
  list-style: none
}
.tools__gauges {
  border: #000 solid 2px;
  border-radius: 10px
}
.tools__2column {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 3fr 2fr;
  grid-template-columns: 3fr 2fr;
  gap: 20px;
  padding: 20px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center
}
.header {
  position: fixed;
  z-index: 10;
  top: 0;
  left: 0;
  width: 100%
}
.header__leng {
  background: #303036
}
.navbar {
  background-color: #eb681d
}
.navbar__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  width: 100%;
  max-width: none;
  min-height: 3.75rem
}
.navbar__logo {
  z-index: 15;
  color: #fff;
  font-size: 18px;
  text-transform: uppercase;
  text-decoration: none;
  font-weight: 900
}
.navbar__item {
  position: relative
}
.navbar__link {
  color: #fff;
  font-size: 18px;
  text-transform: uppercase;
  text-decoration: none;
  font-weight: 900
}
.navbar__link:hover {
  text-decoration: underline
}
.navbar__arrow {
  display: none
}
.navbar__sub-list {
  position: absolute;
  top: 100%;
  background-color: #191b1c;
  padding: 20px;
  list-style: none;
  border-radius: 5px
}
.navbar__sub-list::before {
  content: "";
  position: absolute;
  top: 5px;
  left: 5px;
  right: 5px;
  bottom: 5px;
  border: 2px solid #d1bbbb;
  pointer-events: none;
  border-radius: 5px
}
.navbar__sub-list--column {
  max-height: 800px;
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  -webkit-columns: 200px 2;
  -moz-columns: 200px 2;
  columns: 200px 2;
  -webkit-column-gap: 20px;
  -moz-column-gap: 20px;
  column-gap: 20px
}
.navbar__sub-item {
  padding-bottom: .9375rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column
}
.navbar__sub-link {
  color: #fff;
  font-size: 16px;
  text-decoration: none;
  white-space: nowrap
}
.navbar__sub-link > b {
  color: #c54c21;
  font-size: 18px
}
.navbar__sub-link:hover {
  text-decoration: underline
}
.hamburger--display-none {
  display: none
}
html.pc .navbar .navbar__list > .navbar__item:hover .navbar__sub-list {
  -webkit-transform: translate(0,-1px);
  -ms-transform: translate(0,-1px);
  transform: translate(0,-1px);
  opacity: 1;
  visibility: visible;
  pointer-events: all
}
html.touch .navbar__arrow {
  display: block;
  width: 0;
  height: 0;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 10px solid #fff;
  -webkit-transition: -webkit-transform .3s ease 0s;
  transition: -webkit-transform .3s ease 0s;
  transition: transform .3s ease 0s;
  transition: transform .3s ease 0s,-webkit-transform .3s ease 0s
}
html.touch .navbar .navbar__list > .navbar__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 20px
}
html.touch .navbar .navbar__list > .navbar__item._active .navbar__sub-list {
  -webkit-transform: translate(0,-1px);
  -ms-transform: translate(0,-1px);
  transform: translate(0,-1px);
  opacity: 1;
  visibility: visible;
  pointer-events: all
}
html.touch .navbar .navbar__list > .navbar__item._active .navbar__arrow {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg)
}
main {
  padding-top: 3.75rem
}
@media (min-width:801px) {
  .navbar__list {
    list-style: none;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: 30px
  }
  .navbar__sub-list {
    -webkit-transform: translate(0,1px);
    -ms-transform: translate(0,1px);
    transform: translate(0,1px);
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    -webkit-transition: all .3s ease 0s;
    transition: all .3s ease 0s
  }
}
@media (max-width:801px) {
  .hamburger {
    display: block;
    z-index: 5;
    position: relative;
    width: 30px;
    height: 18px;
    cursor: pointer
  }
  .hamburger__line {
    position: absolute;
    left: 0;
    height: 10%;
    width: 100%;
    -webkit-transition: all .3s ease 0s;
    transition: all .3s ease 0s;
    background-color: #fff
  }
  .hamburger__line--1 {
    top: 50%;
    -webkit-transform: scale(1) translate(0,-50%);
    -ms-transform: scale(1) translate(0,-50%);
    transform: scale(1) translate(0,-50%)
  }
  .hamburger__line--2 {
    top: 0
  }
  .hamburger__line--3 {
    bottom: 0
  }
  .navbar__list {
    position: fixed;
    top: 0;
    left: -100%;
    width: 100dvw;
    height: 100dvh;
    background-color: #191b1c;
    padding: 100px 30px 30px 30px;
    -webkit-transition: left .3s ease 0s;
    transition: left .3s ease 0s;
    overflow: auto
  }
  .navbar__list._active {
    left: 0
  }
  .navbar__sub-item > * {
    text-wrap: wrap;
    padding-bottom: 20px
  }
  .navbar__list::before {
    content: "";
    position: fixed;
    width: 100%;
    top: 0;
    left: 0;
    height: 3.75rem;
    background-color: #eb681d;
    z-index: 10
  }
  .navbar__item {
    padding-bottom: 1.875rem;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap
  }
  .navbar__item._active .navbar__sub-list--column {
    display: block
  }
  .navbar__item:last-child {
    padding-bottom: 0
  }
  .navbar__sub-list {
    position: relative;
    -webkit-box-flex: 1;
    -ms-flex: 1 1 100%;
    flex: 1 1 100%
  }
  .navbar__sub-list--column {
    width: 100%;
    -webkit-columns: 1;
    -moz-columns: 1;
    columns: 1;
    -webkit-column-gap: 0;
    -moz-column-gap: 0;
    column-gap: 0;
    max-height: none;
    text-wrap: wrap;
    display: none
  }
  body._lock {
    overflow: hidden
  }
}
@media (max-width:801px) and (min-width:801px) {
  .navbar__sub-list {
    -webkit-transform: translate(0,1px);
    -ms-transform: translate(0,1px);
    transform: translate(0,1px);
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    -webkit-transition: all .3s ease 0s;
    transition: all .3s ease 0s
  }
}
@media (prefers-reduced-motion:reduce) {
  html:focus-within {
    scroll-behavior: auto
  }
  *,
  ::after,
  ::before {
    -webkit-animation-duration: 0s!important;
    animation-duration: 0s!important;
    -webkit-animation-iteration-count: 1!important;
    animation-iteration-count: 1!important;
    -webkit-transition-duration: 0s!important;
    transition-duration: 0s!important;
    scroll-behavior: auto!important
  }
}
.webp .rules__core--1 {
  background-image: url(../image/corebook.webp)
}
.webp .rules__core--2 {
  background-image: url(../image/otherbooks.webp)
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
